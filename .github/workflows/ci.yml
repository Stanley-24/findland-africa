name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pip install pytest pytest-asyncio httpx
        pytest -v || echo "No tests found yet"

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint with ESLint
      run: npm run lint || echo "Linting not configured yet"
    
    - name: Type check with TypeScript
      run: npm run type-check || echo "Type checking not configured yet"
    
    - name: Build
      run: npm run build
      env:
        REACT_APP_API_URL: https://findland-africa.onrender.com

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        trivyignores: '.github/security/trivy-ignore.yaml'
        exit-code: '0'  # Don't fail the build on vulnerabilities
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always() && github.event_name == 'push'
      continue-on-error: true
      with:
        sarif_file: 'trivy-results.sarif'

  deploy-staging:
    needs: [test-backend, test-frontend, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render (Staging)
      run: |
        echo "Deploying to staging environment..."
        # Add Render deployment commands here when needed
    
    - name: Deploy to Vercel (Staging)
      run: |
        echo "Deploying frontend to Vercel staging..."
        # Add Vercel deployment commands here when needed

  deploy-production:
    needs: [test-backend, test-frontend, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render (Production)
      run: |
        echo "Deploying to production environment..."
        # Add Render deployment commands here when needed
    
    - name: Deploy to Vercel (Production)
      run: |
        echo "Deploying frontend to Vercel production..."
        # Add Vercel deployment commands here when needed
